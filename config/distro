### Create own Debian 10 distro by Matt Pijanowski [WebStrongOS-1.5] ###

----------------------------------------------------------------------------------------------------------

Step 0 (in ROOT)
apt update && apt upgrade -y

Step 1 (in ROOT)
cd distro
lb clean --purge

Step 2 (in ROOT)

# Basic config
lb config --apt apt --apt-indices true --binary-filesystem ext4 -s iso --cache true --apt-recommends true -a amd64 --binary-images iso-hybrid --debian-installer live --linux-flavours amd64 --mode debian --debian-installer-gui true --archive-areas "main contrib non-free" --security true --interactive shell --updates true --bootappend-live "boot=live config autologin quiet nouveau.modeset=0 username=user user-fullname=WebStrongOS hostname=WebStrong" --iso-application WebStrongOS --iso-preparer WebStrongOS-amd64-1.5 --iso-publisher WebStrongOS-1.5 -d buster iso-volume webStrongOS-1.5

# Replace bootloaders files and config
rm -rf /home/matt/distro/config/bootloaders && cp -r /home/matt/Documents/ws2/data/bootloaders /home/matt/distro/config/bootloaders && rm -rf /home/matt/distro/config/binary && cp -r /home/matt/Documents/ws2/data/binary /home/matt/distro/config

Step 3 (in ROOT)

# Start building
lb build

Step 4 (in ROOT)

# Add basic sources list 
cp -r /home/matt/Documents/ws2/sources.list /home/matt/distro/chroot/etc/apt/

Step 5 (in CHROOT)

# Update kernel
apt install ca-certificates -y && apt update && apt upgrade -y && apt dist-upgrade -y
apt install -t buster-backports linux-image-amd64 -y

# Remove old kernel
apt-get purge linux-image-4.* -y
dpkg -l | grep linux-image

# Basic Packages
apt update && apt install sudo curl nano gedit apache2 git wireshark gimp filezilla gparted vim net-tools gnome ruby-full rails rubygems sqlite3 build-essential python2.7 python3 python-pip python3-pip gawk autoconf automake bison libffi-dev libgdbm-dev libncurses5-dev libsqlite3-dev libtool libyaml-dev pkg-config zlib1g-dev libgmp-dev libreadline-dev libssl-dev libcurl4 wget apt-transport-https inkscape -y

apt-cache policy libssl-dev

# PHP
apt install php php-cgi php-mysqli php-pear php-mbstring php-gettext php-phpseclib php-mysql php-common libapache2-mod-php php-mbstring php-zip php-gd -y

# MySQL
wget https://dev.mysql.com/get/mysql-apt-config_0.8.13-1_all.deb
dpkg -i mysql-apt-config*
rm mysql-apt-config_0.8.13-1_all.deb
apt update && apt install mysql-server -y

# Composer
curl -sS https://getcomposer.org/installer -o composer-setup.php
php -r "if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
curl -sS https://getcomposer.org/installer -o composer-setup.php
php composer-setup.php --install-dir=/usr/local/bin --filename=composer
rm composer-setup.php

# PostgreSQL & pgAdmin
curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
apt update && apt install postgresql-11 pgadmin4 postgresql libpq-dev -y

# MongoDB
wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -
echo "deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.2 main" | sudo tee /etc/apt/sources.list.d/mongodb-org.list
apt update && apt install openssl mongodb-org mongodb-org-server -y

# NodeJS
curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
apt update && sudo apt-get install -y nodejs

# Brave
curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -
echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ buster main" | tee /etc/apt/sources.list.d/brave-browser-release-${buster}.list
apt update && apt install brave-browser -y
echo 'kernel.unprivileged_userns_clone=1' > /etc/sysctl.d/00-local-userns.conf
service procps restart

# VirtualBox
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
echo "deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian bionic contrib" | sudo tee /etc/apt/sources.list.d/virtualbox.list
apt update && sudo apt install virtualbox-6.1 -y

# ImageMagick
wget https://www.imagemagick.org/download/ImageMagick.tar.gz
tar xvzf ImageMagick.tar.gz
cd ImageMagick-*
./configure
make
make install 
ldconfig /usr/local/lib
cd .. && rm -r ImageMagick*

# Vue CLI
npm cache verify
npm install -g vue-cli vue

# React CLI
npm install -g create-react-app

# React Native CLI
npm install -g react-native-cli

# Expo CLI
npm cache verify
npm install -g expo-cli

# Android Studio
apt-get install lib32stdc++6 -y

# Slack
wget https://downloads.slack-edge.com/linux_releases/slack-desktop-4.4.3-amd64.deb
dpkg -i slack-desktop-4.4.3-amd64.deb
rm slack-desktop-4.4.3-amd64.deb

# Stacer
wget https://github.com/oguzhaninan/Stacer/releases/download/v1.1.0/stacer_1.1.0_amd64.deb
dpkg -i stacer_1.1.0_amd64.deb
rm stacer_1.1.0_amd64.deb

# Google Chrome
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
dpkg -i google-chrome-stable_current_amd64.deb
rm google-chrome-stable_current_amd64.deb

# Atom
wget -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | apt-key add -
sh -c 'echo "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main" > /etc/apt/sources.list.d/atom.list'
apt-get update && apt install atom -y

# Skype
wget https://go.skype.com/skypeforlinux-64.deb
dpkg -i ./skypeforlinux-64.deb
rm skypeforlinux-64.deb

# Papirus Icons
sh -c "echo 'deb http://ppa.launchpad.net/papirus/papirus/ubuntu bionic main' > /etc/apt/sources.list.d/papirus-ppa.list"
apt-key adv --recv-keys --keyserver keyserver.ubuntu.com E58A9D36647CAE7F
apt update && apt install papirus-icon-theme -y

# Opera
wget -qO- https://deb.opera.com/archive.key | apt-key add
add-apt-repository "deb [arch=amd64] https://deb.opera.com/opera-stable/ stable non-free"
apt update && apt install opera-stable -y

# Virtual Studio Code
curl -sSL https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
apt update && apt install code -y

Step 6 (in ROOT)

# Design
cd /home/matt/Documents/ws2/data && cp -r ./Ant-Dracula /home/matt/distro/chroot/usr/share/themes/Ant-Dracula && rm -rf /home/matt/distro/chroot/usr/share/backgrounds && cp -r backgrounds/ /home/matt/distro/chroot/usr/share/backgrounds && rm -rf /home/matt/distro/chroot/usr/share/gnome-background-properties && cp -r gnome-background-properties/ /home/matt/distro/chroot/usr/share/gnome-background-properties && cp -r default_background/ /home/matt/distro/chroot/usr && rm -rf /home/matt/distro/chroot/etc/skel && cp -r skel/ /home/matt/distro/chroot/etc/skel && cp -r .bashrc /home/matt/distro/chroot/root

# Programs shortcut
cp -r /home/matt/Documents/ws2/applications/* /home/matt/distro/chroot/usr/share/applications/

# Programs
cp -r /home/matt/Documents/ws2/programs/android-studio/ /home/matt/distro/chroot/usr/lib/
cp -r /home/matt/Documents/ws2/programs/Postman/ /home/matt/distro/chroot/usr/lib/
cp -r /home/matt/Documents/ws2/programs/RubyMine/ /home/matt/distro/chroot/usr/lib/
cp -r /home/matt/Documents/ws2/programs/PyCharm-edu/ /home/matt/distro/chroot/usr/lib/
cp -r /home/matt/Documents/ws2/programs/WebStorm/ /home/matt/distro/chroot/usr/lib/
cp -r /home/matt/Documents/ws2/programs/PhpStorm/ /home/matt/distro/chroot/usr/lib/

# Script
chmod -R 755 /home/matt/Documents/ws2/scripts/* && cp -r /home/matt/Documents/ws2/scripts/* /home/matt/distro/chroot/bin/
### Remove .sh from file name ###

Step 7 (in CHROOT)

# Remove unnecessary programs
apt autoremove gnome-color* gnome-contacts gnome-dictionary gnome-games gnome-klotski gnome-mahjongg gnome-mines gnome-nibbles gnome-robots gnome-sudoku gnome-taquin gnome-user-guide gnome-weather polari gnome-documents cheese evolution tracker gnome-maps rhythmbox simple-scan transmission* vinagre -y && apt install nautilus -y

Step 8 (in CHROOT)

# Last update & upgrade
CLEAR SOURCES LIST (nano /etc/apt/sources.list)
apt install -f
apt update && apt autoremove -y && apt upgrade -y && apt dist-upgrade -y

Step 9 (in CHROOT)

# Clear and build
*CLEAR ROOT UNNECESSARY FILES, CACHE AND HISTORY (history -c)
exit
